"""Module for methods in reading and writing data"""
import os

from pathlib import Path

import json

from pandas import DataFrame, read_csv

import pandas as pd

from typing import List

def find_trials(video_dir, csv_dir, trial_indices) -> DataFrame:
    
    trial_files = [os.path.join(video_dir, f) for f in os.listdir(video_dir)]
    trial_names = []
    trials_to_analyze = []

    for trial_file in trial_files:
        # Put the "if" statement under the hash if CSV wasn't generated by DeepLabCut
        if trial_file.endswith("DLC_resnet50_ophys_whiskersJul19shuffle1_100000.csv"):
            trial_names.append(trial_file.split('/')[-1][:-4])
                               
    if len(trials_to_analyze) == 0:
        trials_to_analyze = trial_names
       
    trials_to_analyze.sort()
    
    # Iterate over trials and extract the values based on indices 
    for i, cur_trial in enumerate(trials_to_analyze[:128]): 
        start_index = trial_indices[i] 
        end_index = trial_indices[i + 1] 
        trial_slice = (start_index, end_index) 
        print(f"{cur_trial}: {trial_slice}")

    # Creating a list of all CSV files
    dfs = []
    all_csv_files = []
    for cur_trial in trials_to_analyze:
        df = pd.read_csv(csv_dir + cur_trial + ".csv")
        dfs.append(df)

    dfs_df = pd.concat(dfs, join='inner').drop_duplicates()
    
    return dfs_df

def session_time(json_dir) -> List:
    all_trials = []

    for file in os.listdir(json_dir):
        filename = os.fsdecode(file)
        if filename.startswith("trial") and filename.endswith(".json"):
            # Opening the JSON file with data for the trial.
            with open(f'/{json_dir}/{file}') as j:
                trial_frames = json.loads(j.read())
                trial_time = trial_frames['frame_times'][-1] - trial_frames['frame_times'][1]
                all_trials.append(trial_time)

    session_length = sum(all_trials)
    
    return session_length

def read_trial_coordinates(trial_coords: Path) -> DataFrame:
    """
    Read a file containing trial coordinates and returns a pandas DataFrame.
    The csv file is expected to look like:
    scorer,heatmap_tracker,...,heatmap_tracker
    bodyparts,paw1,paw1,paw1,paw2,paw2,paw2
    coords,x,y,likelihood,x,y,likelihood
    0,633.45,326.82,0.99,417.58,328.60,0.99
    1,633.34,327.42,0.99,418.41,328.23,0.99

    Parameters
    ----------
    trial_coords : Path
      Location of the file containing the trial coordinates

    Returns
    -------
    DataFrame

      The output df might look like:
      scorer    heatmap_tracker
      bodyparts            paw1                       paw2
      coords                  x       y likelihood       x       y likelihood
      0                  633.45  326.82       0.99  417.58  328.60       0.99
      1                  633.34  327.42       0.99  418.41  328.23       0.99
    """

    df = read_csv(trial_coords, header=[0, 1, 2], index_col=0)

    return df


def read_speed_coordinates(speed_coords: Path) -> DataFrame:
    """
    Read a file containing speed coordinates and returns a pandas DataFrame.
    Parameters
    ----------
    speed_coords : Path
      Location of the file containing the speed coordinates

    Returns
    -------
    DataFrame

    """

    df = read_csv(speed_coords)

    return df
